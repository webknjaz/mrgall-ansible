---

- name: Create dokku apps
  shell: dokku apps:create {{ item.name }}
  register: appadd_cmd
  changed_when: appadd_cmd.rc == 0 or (appadd_cmd.rc != 0 and 'Name is already taken' not in appadd_cmd.stderr_lines)
  failed_when: appadd_cmd.rc != 0 and 'Name is already taken' not in appadd_cmd.stderr_lines
  with_items: "{{ apps }}"

- name: Create plugins dir for wordpress apps
  become: yes
  become_method: sudo
  file:
    path: "/var/lib/dokku/data/storage/{{ item.name }}-plugins"
    state: directory
    mode: u=rwx,g=rx,o=
    owner: 32767
    group: 32767
  when: item.wordpress|default(False)
  with_items: "{{ apps }}"

- name: Create uploads dir for wordpress apps
  become: yes
  become_method: sudo
  file:
    path: "/var/lib/dokku/data/storage/{{ item.name }}-uploads"
    state: directory
    mode: u=rwx,g=rx,o=
    owner: 32767
    group: 32767
  when: item.wordpress|default(False)
  with_items: "{{ apps }}"

- name: Mount plugins storage for wordpress apps
  shell: dokku storage:mount {{ item.name }} /var/lib/dokku/data/storage/{{ item.name }}-plugins:/app/wp-content/plugins
  register: wp_plugins_mount_cmd
  changed_when: wp_plugins_mount_cmd.rc == 0 or (wp_plugins_mount_cmd.rc != 0 and 'Mount path already exists.' not in wp_plugins_mount_cmd.stderr_lines)
  failed_when: wp_plugins_mount_cmd.rc != 0 and 'Mount path already exists.' not in wp_plugins_mount_cmd.stderr_lines
  when: item.wordpress|default(False)
  with_items: "{{ apps }}"

- name: Mount uploads storage for wordpress apps
  shell: dokku storage:mount {{ item.name }} /var/lib/dokku/data/storage/{{ item.name }}-uploads:/app/wp-content/uploads
  register: wp_uploads_mount_cmd
  changed_when: wp_uploads_mount_cmd.rc == 0 or (wp_uploads_mount_cmd.rc != 0 and 'Mount path already exists.' not in wp_uploads_mount_cmd.stderr_lines)
  failed_when: wp_uploads_mount_cmd.rc != 0 and 'Mount path already exists.' not in wp_uploads_mount_cmd.stderr_lines
  when: item.wordpress|default(False)
  with_items: "{{ apps }}"

- name: Set up env vars for dokku apps
  shell: dokku config:set --no-restart {{ item.0.name }} {{ item.1 }}
  with_subelements:
  - "{{ apps }}"
  - env_vars

# There's no need to have domain removal task as it's utilized with this action
- name: Set up FQDNs for dokku apps
  shell: dokku domains:set {{ item.name }} {{ item.domains | join(' ') }}
  with_items: "{{ apps }}"

- name: Set up Let's Encrypt emails for dokku apps
  shell: dokku config:set --no-restart {{ item.name }} DOKKU_LETSENCRYPT_EMAIL={{ item.email }}
  when: item.ssl|default(false)
  with_items: "{{ apps }}"

- name: Set up SSL for all FQDNs of dokku apps
  shell: dokku letsencrypt {{ item.name }}
  when: item.ssl|default(false)
  with_items: "{{ apps }}"

- name: Schedule Let's Encrypt SSL certificates auto-renewal for all FQDNs of dokku apps
  shell: dokku letsencrypt:cron-job --add

- name: Drop users from write ACL for dokku apps
  shell: dokku acl:remove {{ item.0.name }} {{ item.1 }}
  register: appacldel_cmd
  changed_when: appacldel_cmd.rc != 1
  failed_when: appacldel_cmd.rc > 1
  with_subelements:
  - "{{ apps }}"
  - remove_acl_users

- name: Set up ACL for dokku apps
  shell: dokku acl:add {{ item.0.name }} {{ item.1 }}
  register: appacladd_cmd
  changed_when: appacladd_cmd.rc == 0 or (appacladd_cmd.rc != 0 and 'User already has permissions to push to this repository' not in appacladd_cmd.stderr_lines)
  failed_when: appacladd_cmd.rc != 0 and 'User already has permissions to push to this repository' not in appacladd_cmd.stderr_lines
  with_subelements:
  - "{{ apps }}"
  - acl_users

- name: Set up MariaDB (MySQL fork) for dokku apps
  shell: dokku mariadb:create {{ item.name }}
  register: mariadbadd_cmd
  changed_when: mariadbadd_cmd.rc == 0 or (mariadbadd_cmd.rc != 0 and 'already exists' not in mariadbadd_cmd.stderr)
  failed_when: mariadbadd_cmd.rc != 0 and 'already exists' not in mariadbadd_cmd.stderr
  when: item.mariadb|default(False) or item.wordpress|default(False)
  with_items: "{{ apps }}"

- name: Create backup directory for MariaDB dumps
  become: yes
  become_method: sudo
  file:
    path: "{{ mariadb_backup_dir }}"
    state: directory
    mode: 0640
    owner: root
    group: root

- name: Set up backup cron jobs for MariaDB services
  become: yes
  become_method: sudo
  cron:
    minute: 3
    hour: 3
    day: '*'
    month: '*'
    weekday: '*'
    job: "dokku mariadb:export {{ item.name }} | gzip -9 > {{ mariadb_backup_dir }}/mariadb_{{ item.name }}_db_`date +\\%Y_\\%m_\\%d_\\%I_\\%M_\\%p`.dump.gz"
    name: "backup-dokku-mariadb-{{ item.name }}"
    cron_file: "dokku-mariadb-{{ item.name | replace('.', '_') }}"
    backup: yes
    state: present
    user: root
  when: item.mariadb|default(False) or item.wordpress|default(False)
  with_items: "{{ apps }}"

- name: Associate MariaDB with dokku apps
  shell: dokku mariadb:link {{ item.name }} {{ item.name }}
  register: mariadblink_cmd
  changed_when: mariadblink_cmd.rc == 0 or (mariadblink_cmd.rc != 0 and 'Already linked as DATABASE_URL' not in mariadblink_cmd.stderr_lines)
  failed_when: mariadblink_cmd.rc != 0 and 'Already linked as DATABASE_URL' not in mariadblink_cmd.stderr_lines
  when: item.mariadb|default(False) or item.wordpress|default(False)
  with_items: "{{ apps }}"
